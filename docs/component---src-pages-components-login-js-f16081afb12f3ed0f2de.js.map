{"version":3,"sources":["webpack:///./src/pages/components/login.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["Login","props","onClick","onLogin","WithLoginController","Component","getAccessToken","code","a","data","encodeURI","form_data","Object","keys","forEach","key","push","fetch","method","body","join","headers","response","json","result","window","localStorage","setItem","access_token","history","pushState","componentDidMount","indexOf","document","location","search","split","token","setState","href","render","state","getItem","React","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"4NAEA,SAASA,EAAMC,GACb,OAAQ,6BAAK,4BAAQC,QAASD,EAAME,SAAvB,WAGA,SAASC,EAAoBC,GAC1C,mBACE,WAAYJ,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAMFK,eAPmB,uCAOF,WAAOC,GAAP,qBAAAC,EAAA,6DACTC,EAAO,CACX,KAAQF,EACR,WAAc,qBACd,UAAa,MACb,cAAiB,mCACjB,aAAgBG,UAAU,wCAExBC,EAAY,GAChBC,OAAOC,KAAKJ,GAAMK,SAChB,SAAAC,GACEJ,EAAUK,KAAQD,EAAlB,IAAyBN,EAAKM,OAXnB,SAcQE,MACrB,gDACA,CACEC,OAAQ,OACRC,KAAMR,EAAUS,KAAK,KACrBC,QAAS,CACP,eAAgB,uCApBP,cAcTC,EAdS,gBAwBMA,EAASC,OAxBf,cAwBTC,EAxBS,OA0BfC,OAAOC,aAAaC,QAAQ,eAAgBH,EAAOI,cACnDH,OAAOI,QAAQC,UAAU,GAAI,YAAa,KA3B3B,kBA4BRN,EAAOI,cA5BC,4CAPE,wDAsCnBG,kBAtCmB,uCAsCC,WAAO9B,GAAP,iBAAAO,EAAA,0DAEZ,OAAOwB,QAAQC,SAASC,SAASC,QAFrB,uBAGZ5B,EAAO0B,SAASC,SAASC,OAAOC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAH7C,SAIE,EAAK9B,eAAeC,GAJtB,OAIZ8B,EAJY,OAKhB,EAAKC,SAAS,CACZV,aAAcS,IANA,2CAtCD,wDAiDnBlC,QAAU,WACR8B,SAASC,SAASK,KAAO,6DACH7B,UAAU,gCADP,wDAlDR,EAyDnB8B,OAAS,WACP,OACE,oCAEI,EAAKC,MAAMb,aACT,kBAACvB,EAAD,CAAWuB,aAAc,EAAKa,MAAMb,eAEpC,kBAAC5B,EAAD,CAAOG,QAAS,EAAKA,YA9D7B,EAAKsC,MAAQ,CACXb,aAAcH,OAAOC,aAAagB,QAAQ,iBAH3B,EADrB,wBAAO,EAAP,CAAqBC,IAAMtC,a,oCCP7B,SAASuC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQlC,EAAKmC,GACpE,IACE,IAAIC,EAAON,EAAI9B,GAAKmC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAN,EAAOM,GAILF,EAAKG,KACPR,EAAQM,GAERG,QAAQT,QAAQM,GAAOI,KAAKR,EAAOC,GAIxB,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,GAGlE,SAASH,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,OA/BZ,mC,qBCOA,IAAIC,EAAW,SAAUC,GACvB,aAEA,IAAIC,EAAKxD,OAAOyD,UACZC,EAASF,EAAGG,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKlE,EAAKqC,GAOxB,OANAxC,OAAOsE,eAAeD,EAAKlE,EAAK,CAC9BqC,MAAOA,EACP+B,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAIlE,GAEb,IAEEiE,EAAO,GAAI,IACX,MAAOhB,GACPgB,EAAS,SAASC,EAAKlE,EAAKqC,GAC1B,OAAO6B,EAAIlE,GAAOqC,GAItB,SAASkC,EAAKC,EAASC,EAAS7B,EAAM8B,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYhF,OAAOiF,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAsMZ,SAA0BT,EAAS5B,EAAMmC,GACvC,IAAIrD,EA/KuB,iBAiL3B,OAAO,SAAgBvB,EAAQgC,GAC7B,GAhLoB,cAgLhBT,EACF,MAAM,IAAIwD,MAAM,gCAGlB,GAnLoB,cAmLhBxD,EAA6B,CAC/B,GAAe,UAAXvB,EACF,MAAMgC,EAKR,OAAOgD,IAMT,IAHAJ,EAAQ5E,OAASA,EACjB4E,EAAQ5C,IAAMA,IAED,CACX,IAAIiD,EAAWL,EAAQK,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUL,GACnD,GAAIM,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBN,EAAQ5E,OAGV4E,EAAQS,KAAOT,EAAQU,MAAQV,EAAQ5C,SAElC,GAAuB,UAAnB4C,EAAQ5E,OAAoB,CACrC,GAnNqB,mBAmNjBuB,EAEF,MADAA,EAjNc,YAkNRqD,EAAQ5C,IAGhB4C,EAAQW,kBAAkBX,EAAQ5C,SAEN,WAAnB4C,EAAQ5E,QACjB4E,EAAQY,OAAO,SAAUZ,EAAQ5C,KAGnCT,EA5NkB,YA8NlB,IAAIkE,EAASC,EAASrB,EAAS5B,EAAMmC,GACrC,GAAoB,WAAhBa,EAAOE,KAAmB,CAO5B,GAJApE,EAAQqD,EAAQxC,KAjOA,YAFK,iBAuOjBqD,EAAOzD,MAAQoD,EACjB,SAGF,MAAO,CACLlD,MAAOuD,EAAOzD,IACdI,KAAMwC,EAAQxC,MAGS,UAAhBqD,EAAOE,OAChBpE,EA/OgB,YAkPhBqD,EAAQ5E,OAAS,QACjB4E,EAAQ5C,IAAMyD,EAAOzD,OA9QP4D,CAAiBvB,EAAS5B,EAAMmC,GAE7CF,EAcT,SAASgB,EAASlD,EAAIuB,EAAK/B,GACzB,IACE,MAAO,CAAE2D,KAAM,SAAU3D,IAAKQ,EAAGqD,KAAK9B,EAAK/B,IAC3C,MAAOc,GACP,MAAO,CAAE6C,KAAM,QAAS3D,IAAKc,IAhBjCG,EAAQmB,KAAOA,EAoBf,IAOIgB,EAAmB,GAMvB,SAASX,KACT,SAASqB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBxC,GAAkB,WAClC,OAAOd,MAGT,IAAIuD,EAAWvG,OAAOwG,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BjD,GAC5BE,EAAOyC,KAAKM,EAAyB3C,KAGvCwC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B5C,UAClCsB,EAAUtB,UAAYzD,OAAOiF,OAAOqB,GAWtC,SAASM,EAAsBnD,GAC7B,CAAC,OAAQ,QAAS,UAAUvD,SAAQ,SAASI,GAC3C8D,EAAOX,EAAWnD,GAAQ,SAASgC,GACjC,OAAOU,KAAKoC,QAAQ9E,EAAQgC,SAkClC,SAASuE,EAAc7B,EAAW8B,GAgChC,IAAIC,EAgCJ/D,KAAKoC,QA9BL,SAAiB9E,EAAQgC,GACvB,SAAS0E,IACP,OAAO,IAAIF,GAAY,SAAS5E,EAASC,IAnC7C,SAAS8E,EAAO3G,EAAQgC,EAAKJ,EAASC,GACpC,IAAI4D,EAASC,EAAShB,EAAU1E,GAAS0E,EAAW1C,GACpD,GAAoB,UAAhByD,EAAOE,KAEJ,CACL,IAAIrF,EAASmF,EAAOzD,IAChBE,EAAQ5B,EAAO4B,MACnB,OAAIA,GACiB,iBAAVA,GACPkB,EAAOyC,KAAK3D,EAAO,WACdsE,EAAY5E,QAAQM,EAAM0E,SAAStE,MAAK,SAASJ,GACtDyE,EAAO,OAAQzE,EAAON,EAASC,MAC9B,SAASiB,GACV6D,EAAO,QAAS7D,EAAKlB,EAASC,MAI3B2E,EAAY5E,QAAQM,GAAOI,MAAK,SAASuE,GAI9CvG,EAAO4B,MAAQ2E,EACfjF,EAAQtB,MACP,SAAS6B,GAGV,OAAOwE,EAAO,QAASxE,EAAOP,EAASC,MAvBzCA,EAAO4D,EAAOzD,KAiCZ2E,CAAO3G,EAAQgC,EAAKJ,EAASC,MAIjC,OAAO4E,EAaLA,EAAkBA,EAAgBnE,KAChCoE,EAGAA,GACEA,KAkHV,SAASvB,EAAoBF,EAAUL,GACrC,IAAI5E,EAASiF,EAASxB,SAASmB,EAAQ5E,QACvC,QA1TE+C,IA0TE/C,EAAsB,CAKxB,GAFA4E,EAAQK,SAAW,KAEI,UAAnBL,EAAQ5E,OAAoB,CAE9B,GAAIiF,EAASxB,SAAiB,SAG5BmB,EAAQ5E,OAAS,SACjB4E,EAAQ5C,SArUZe,EAsUIoC,EAAoBF,EAAUL,GAEP,UAAnBA,EAAQ5E,QAGV,OAAOoF,EAIXR,EAAQ5E,OAAS,QACjB4E,EAAQ5C,IAAM,IAAI8E,UAChB,kDAGJ,OAAO1B,EAGT,IAAIK,EAASC,EAAS1F,EAAQiF,EAASxB,SAAUmB,EAAQ5C,KAEzD,GAAoB,UAAhByD,EAAOE,KAIT,OAHAf,EAAQ5E,OAAS,QACjB4E,EAAQ5C,IAAMyD,EAAOzD,IACrB4C,EAAQK,SAAW,KACZG,EAGT,IAAInD,EAAOwD,EAAOzD,IAElB,OAAMC,EAOFA,EAAKG,MAGPwC,EAAQK,EAAS8B,YAAc9E,EAAKC,MAGpC0C,EAAQoC,KAAO/B,EAASgC,QAQD,WAAnBrC,EAAQ5E,SACV4E,EAAQ5E,OAAS,OACjB4E,EAAQ5C,SAzXVe,GAmYF6B,EAAQK,SAAW,KACZG,GANEnD,GA3BP2C,EAAQ5E,OAAS,QACjB4E,EAAQ5C,IAAM,IAAI8E,UAAU,oCAC5BlC,EAAQK,SAAW,KACZG,GAoDX,SAAS8B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBzE,KAAK+E,WAAW3H,KAAKsH,GAGvB,SAASM,EAAcN,GACrB,IAAI3B,EAAS2B,EAAMO,YAAc,GACjClC,EAAOE,KAAO,gBACPF,EAAOzD,IACdoF,EAAMO,WAAalC,EAGrB,SAASZ,EAAQN,GAIf7B,KAAK+E,WAAa,CAAC,CAAEJ,OAAQ,SAC7B9C,EAAY3E,QAAQsH,EAAcxE,MAClCA,KAAKkF,OAAM,GA8Bb,SAASxB,EAAOyB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASrE,GAC9B,GAAIsE,EACF,OAAOA,EAAejC,KAAKgC,GAG7B,GAA6B,mBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGjB,EAAO,SAASA,IAC1B,OAASiB,EAAIJ,EAASG,QACpB,GAAI5E,EAAOyC,KAAKgC,EAAUI,GAGxB,OAFAjB,EAAK9E,MAAQ2F,EAASI,GACtBjB,EAAK5E,MAAO,EACL4E,EAOX,OAHAA,EAAK9E,WAzeTa,EA0eIiE,EAAK5E,MAAO,EAEL4E,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMhC,GAIjB,SAASA,IACP,MAAO,CAAE9C,WAzfPa,EAyfyBX,MAAM,GA+MnC,OA5mBA0D,EAAkB3C,UAAYkD,EAAG6B,YAAcnC,EAC/CA,EAA2BmC,YAAcpC,EACzCA,EAAkBqC,YAAcrE,EAC9BiC,EACAnC,EACA,qBAaFX,EAAQmF,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASxC,GAG2B,uBAAnCwC,EAAKH,aAAeG,EAAKC,QAIhCtF,EAAQuF,KAAO,SAASH,GAQtB,OAPI3I,OAAO+I,eACT/I,OAAO+I,eAAeJ,EAAQtC,IAE9BsC,EAAOK,UAAY3C,EACnBjC,EAAOuE,EAAQzE,EAAmB,sBAEpCyE,EAAOlF,UAAYzD,OAAOiF,OAAO0B,GAC1BgC,GAOTpF,EAAQ0F,MAAQ,SAAS3G,GACvB,MAAO,CAAE4E,QAAS5E,IAsEpBsE,EAAsBC,EAAcpD,WACpCoD,EAAcpD,UAAUO,GAAuB,WAC7C,OAAOhB,MAETO,EAAQsD,cAAgBA,EAKxBtD,EAAQ2F,MAAQ,SAASvE,EAASC,EAAS7B,EAAM8B,EAAaiC,QACxC,IAAhBA,IAAwBA,EAAcnE,SAE1C,IAAIwG,EAAO,IAAItC,EACbnC,EAAKC,EAASC,EAAS7B,EAAM8B,GAC7BiC,GAGF,OAAOvD,EAAQmF,oBAAoB9D,GAC/BuE,EACAA,EAAK7B,OAAO1E,MAAK,SAAShC,GACxB,OAAOA,EAAO8B,KAAO9B,EAAO4B,MAAQ2G,EAAK7B,WAuKjDV,EAAsBD,GAEtBvC,EAAOuC,EAAIzC,EAAmB,aAO9ByC,EAAG7C,GAAkB,WACnB,OAAOd,MAGT2D,EAAGyC,SAAW,WACZ,MAAO,sBAkCT7F,EAAQtD,KAAO,SAASoJ,GACtB,IAAIpJ,EAAO,GACX,IAAK,IAAIE,KAAOkJ,EACdpJ,EAAKG,KAAKD,GAMZ,OAJAF,EAAKqJ,UAIE,SAAShC,IACd,KAAOrH,EAAKqI,QAAQ,CAClB,IAAInI,EAAMF,EAAKsJ,MACf,GAAIpJ,KAAOkJ,EAGT,OAFA/B,EAAK9E,MAAQrC,EACbmH,EAAK5E,MAAO,EACL4E,EAQX,OADAA,EAAK5E,MAAO,EACL4E,IAsCX/D,EAAQmD,OAASA,EAMjBvB,EAAQ1B,UAAY,CAClB+E,YAAarD,EAEb+C,MAAO,SAASsB,GAcd,GAbAxG,KAAKyG,KAAO,EACZzG,KAAKsE,KAAO,EAGZtE,KAAK2C,KAAO3C,KAAK4C,WApgBjBvC,EAqgBAL,KAAKN,MAAO,EACZM,KAAKuC,SAAW,KAEhBvC,KAAK1C,OAAS,OACd0C,KAAKV,SAzgBLe,EA2gBAL,KAAK+E,WAAW7H,QAAQ8H,IAEnBwB,EACH,IAAK,IAAIX,KAAQ7F,KAEQ,MAAnB6F,EAAKa,OAAO,IACZhG,EAAOyC,KAAKnD,KAAM6F,KACjBR,OAAOQ,EAAKc,MAAM,MACrB3G,KAAK6F,QAnhBXxF,IAyhBFuG,KAAM,WACJ5G,KAAKN,MAAO,EAEZ,IACImH,EADY7G,KAAK+E,WAAW,GACLE,WAC3B,GAAwB,UAApB4B,EAAW5D,KACb,MAAM4D,EAAWvH,IAGnB,OAAOU,KAAK8G,MAGdjE,kBAAmB,SAASkE,GAC1B,GAAI/G,KAAKN,KACP,MAAMqH,EAGR,IAAI7E,EAAUlC,KACd,SAASgH,EAAOC,EAAKC,GAYnB,OAXAnE,EAAOE,KAAO,QACdF,EAAOzD,IAAMyH,EACb7E,EAAQoC,KAAO2C,EAEXC,IAGFhF,EAAQ5E,OAAS,OACjB4E,EAAQ5C,SApjBZe,KAujBY6G,EAGZ,IAAK,IAAI3B,EAAIvF,KAAK+E,WAAWO,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ1E,KAAK+E,WAAWQ,GACxBxC,EAAS2B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOqC,EAAO,OAGhB,GAAItC,EAAMC,QAAU3E,KAAKyG,KAAM,CAC7B,IAAIU,EAAWzG,EAAOyC,KAAKuB,EAAO,YAC9B0C,EAAa1G,EAAOyC,KAAKuB,EAAO,cAEpC,GAAIyC,GAAYC,EAAY,CAC1B,GAAIpH,KAAKyG,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,GACzB,GAAI5E,KAAKyG,KAAO/B,EAAMG,WAC3B,OAAOmC,EAAOtC,EAAMG,iBAGjB,GAAIsC,GACT,GAAInH,KAAKyG,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,OAG3B,KAAIwC,EAMT,MAAM,IAAI/E,MAAM,0CALhB,GAAIrC,KAAKyG,KAAO/B,EAAMG,WACpB,OAAOmC,EAAOtC,EAAMG,gBAU9B/B,OAAQ,SAASG,EAAM3D,GACrB,IAAK,IAAIiG,EAAIvF,KAAK+E,WAAWO,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ1E,KAAK+E,WAAWQ,GAC5B,GAAIb,EAAMC,QAAU3E,KAAKyG,MACrB/F,EAAOyC,KAAKuB,EAAO,eACnB1E,KAAKyG,KAAO/B,EAAMG,WAAY,CAChC,IAAIwC,EAAe3C,EACnB,OAIA2C,IACU,UAATpE,GACS,aAATA,IACDoE,EAAa1C,QAAUrF,GACvBA,GAAO+H,EAAaxC,aAGtBwC,EAAe,MAGjB,IAAItE,EAASsE,EAAeA,EAAapC,WAAa,GAItD,OAHAlC,EAAOE,KAAOA,EACdF,EAAOzD,IAAMA,EAET+H,GACFrH,KAAK1C,OAAS,OACd0C,KAAKsE,KAAO+C,EAAaxC,WAClBnC,GAGF1C,KAAKsH,SAASvE,IAGvBuE,SAAU,SAASvE,EAAQ+B,GACzB,GAAoB,UAAhB/B,EAAOE,KACT,MAAMF,EAAOzD,IAcf,MAXoB,UAAhByD,EAAOE,MACS,aAAhBF,EAAOE,KACTjD,KAAKsE,KAAOvB,EAAOzD,IACM,WAAhByD,EAAOE,MAChBjD,KAAK8G,KAAO9G,KAAKV,IAAMyD,EAAOzD,IAC9BU,KAAK1C,OAAS,SACd0C,KAAKsE,KAAO,OACa,WAAhBvB,EAAOE,MAAqB6B,IACrC9E,KAAKsE,KAAOQ,GAGPpC,GAGT6E,OAAQ,SAAS1C,GACf,IAAK,IAAIU,EAAIvF,KAAK+E,WAAWO,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ1E,KAAK+E,WAAWQ,GAC5B,GAAIb,EAAMG,aAAeA,EAGvB,OAFA7E,KAAKsH,SAAS5C,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPhC,IAKb,MAAS,SAASiC,GAChB,IAAK,IAAIY,EAAIvF,KAAK+E,WAAWO,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ1E,KAAK+E,WAAWQ,GAC5B,GAAIb,EAAMC,SAAWA,EAAQ,CAC3B,IAAI5B,EAAS2B,EAAMO,WACnB,GAAoB,UAAhBlC,EAAOE,KAAkB,CAC3B,IAAIuE,EAASzE,EAAOzD,IACpB0F,EAAcN,GAEhB,OAAO8C,GAMX,MAAM,IAAInF,MAAM,0BAGlBoF,cAAe,SAAStC,EAAUd,EAAYE,GAa5C,OAZAvE,KAAKuC,SAAW,CACdxB,SAAU2C,EAAOyB,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhBvE,KAAK1C,SAGP0C,KAAKV,SA7rBPe,GAgsBOqC,IAQJnC,EA7sBK,CAotBiBmH,EAAOnH,SAGtC,IACEoH,mBAAqBrH,EACrB,MAAOsH,GAUPC,SAAS,IAAK,yBAAdA,CAAwCvH,K,qBC1uB1CoH,EAAOnH,QAAU,EAAQ","file":"component---src-pages-components-login-js-f16081afb12f3ed0f2de.js","sourcesContent":["import React from 'react';\n\nfunction Login(props) {\n  return (<div><button onClick={props.onLogin} >Entrar</button></div>);\n}\n\nexport default function WithLoginController(Component) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        access_token: window.localStorage.getItem(\"access_token\")\n      };\n    }\n\n    getAccessToken = async (code) => {\n      const data = {\n        \"code\": code,\n        \"grant_type\": \"authorization_code\",\n        \"client_id\": \"447\",\n        \"client_secret\": \"3d9f6bfc222ba77ba75c4a146a2101f7\",\n        \"redirect_uri\": encodeURI(\"http://localhost:8000/?access_token\")\n      }\n      let form_data = [];\n      Object.keys(data).forEach(\n        key => {\n          form_data.push(`${key}=${data[key]}`);\n        }\n      )\n      const response = await fetch(\n        \"https://accounts.loadingplay.com/oauth2/token\",\n        {\n          method: 'POST',\n          body: form_data.join(\"&\"),\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          }\n        }\n      )\n      const result = await response.json();\n      // load current status\n      window.localStorage.setItem(\"access_token\", result.access_token);\n      window.history.pushState(\"\", \"dashboard\", \"/\");\n      return result.access_token;\n    }\n\n    componentDidMount = async (props) => {\n      // extract code\n      if (!~\"code\".indexOf(document.location.search)) {\n        let code = document.location.search.split(\"&\")[0].split(\"=\")[1];\n        let token = await this.getAccessToken(code);\n        this.setState({\n          access_token: token\n        })\n      }\n    }\n\n    onLogin = () => {\n      document.location.href = \"https://accounts.loadingplay.com/oauth2/auth?\"\n        + \"redirect_uri=\" + encodeURI(\"http://localhost:8000/?code&\")\n        + \"site_name=dashboard&\"\n        + \"client_id=447&\"\n        + \"response_type=code\";\n    }\n\n    render = () => {\n      return (\n        <>\n          {\n            this.state.access_token ?\n              <Component access_token={this.state.access_token} />\n              :\n              <Login onLogin={this.onLogin} ></Login>\n          }\n        </>\n      );\n    }\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}